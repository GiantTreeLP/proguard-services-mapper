# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Gradle
      run: ./gradlew clean publish
      env:
        OSSRH_USER: ${{ env.OSSRH_USER }}
        OSSRH_PASSWORD: ${{ env.OSSRH_PASSWORD }}
        GPG_PRIVATE_KEY: ${{ env.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ env.GPG_PASSPHRASE }}

    - name: Build with Maven
      run: mvn -B package
      working-directory: ./proguard-services-mapper-maven
    
    - name: Set up OSS Sonatype
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        server-id: ossrh
        server-username: OSSRH_USER
        server-password: OSSRH_PASSWORD
        gpg-private-key: GPG_PRIVATE_KEY
        gpg-passphrase: GPG_PASSPHRASE
        settings-path: ${{ github.workspace }}

    - name: Publish to OSS Sonatype
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      working-directory: ./proguard-services-mapper-maven
      env:
        OSSRH_USER: ${{ env.OSSRH_USER }}
        OSSRH_PASSWORD: ${{ env.OSSRH_PASSWORD }}
        GPG_PRIVATE_KEY: ${{ env.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ env.GPG_PASSPHRASE }}
